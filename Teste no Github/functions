import pandas as pd

def nameFile(name):
    fileExtension, fileDirectory  = ".data","./Teste no Github/"
    return fileDirectory+name+fileExtension

def fatorial(n):    
    if n<=1:return 1
    else:return n*fatorial(n-1)

def fibonacci(n):  
    if n<1:return 0
    elif n==1:return 1
    else:return fibonacci(n-1)+fibonacci(n-2)

class Numero():
    def __init__(self,num:int):
        self.n=num
    def line(self):    #simplifica o cálculo de cada numero.
        return [self.n,fatorial(self.n),fibonacci(self.n)]


outName = nameFile("outFile")
numList = [1, 2, 4, 9, 7]

# Faz o arquivo de saída calculado com a funçao 'tratamento' definida acima.
outText = pd.DataFrame([Numero(int(n)).line() for n in numList],columns=['#', 'fact', 'Fib'])
with open(outName,"w") as testOut:
    testOut.write(' '.join(['#', 'fact', 'Fib']))
    testOut.write('\n')
    for i in range(outText.shape[0]):   #escreve o arquivo de saída em acordo com o modelo esperado.
        for j in range(outText.shape[1]):
            testOut.write(str(outText.iloc[i].values[j]))
            if j < outText.shape[1]-1: testOut.write(' ')
        if i < outText.shape[0]-1: testOut.write('\n')